<!-- Navigation -->
<nav class="navbar navbar-expand-lg navbar-light fixed-top" id="mainNav">
  <div class="container">
    <a class="navbar-brand js-scroll-trigger" href="/#page-top">NODEJS PRACTICE</a>
    <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarResponsive"
      aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarResponsive">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="/board">News</a>
        </li>
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="/#about">About</a>
        </li>
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="/#services">Services</a>
        </li>
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="/#portfolio">Portfolio</a>
        </li>


        {{#if usernameAuth.username}}
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="/#projects">Projects</a>
        </li>
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" id="logout" href="">Logout</a>
        </li>
        <li class="nav-item hello-wrapper">
          <h4 class="text-white hello">
            <span class="hello-text">Hello</span>
            {{usernameAuth.username}}
          </h4>
        </li>
        {{else}}
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="/user/register">Register</a>
        </li>
        <span class="mr-2 pre-fix text-white">or</span>
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="" data-toggle="modal" data-target="#loginModal">Login</a>
        </li>
        {{/if}}

      </ul>
    </div>
  </div>
</nav>

<!-- Modal -->
<div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Login</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form action="/login" method="post">
        <div class="modal-body">
          <div class="form-group">
            <label for="username">Username</label>
            <input type="text" name="username" class="form-control" aria-describedby="username" placeholder="Enter username">

          </div>
          <div class="form-group">
            <label for="password">Password</label>
            <input type="password" class="form-control" name="password" placeholder="Password">
          </div>
        </div>
        <div class="modal-footer justify-content-center">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Login</button>
        </div>
      </form>
      <div class="row justify-content-center mb-2">
        or
      </div>
      <div class="row justify-content-center mb-3">
        <!-- <a href="/auth/facebook" class="d-flex justify-content-center col-12 m-b-2">
          <button class="fb-login-button social-signin facebook" data-use-continue-as="false" onlogin="checkLoginState();">Log in with facebook</button>
        </a> -->
        <a href="/auth/google" class="d-flex justify-content-center col-12 m-b-2">
          <button class="social-signin google">Log in with Google+</button>
        </a>
      </div>

      <!-- <div class="fb-login-button" data-max-rows="1" data-size="large" data-button-type="continue_with" data-show-faces="false"
        data-auto-logout-link="false" data-use-continue-as="false" scope="public_profile,email" onlogin="checkLoginState();"></div> -->
    </div>
  </div>
</div>

<script>
  var element = document.querySelector("#logout")
  var http = new XMLHttpRequest();
  var url = '/logout';
  const params = "logout"
  http.open('POST', url, true);
  http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
  if (element) {
    element.addEventListener('click', function (e) {
      if (http.readyState == 4 && http.status == 200) {
        alert(http.responseText);
      }
      http.send(params);
    })
  }
</script>

<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      getAPI(response.authResponse.accessToken);
      console.log(response.authResponse.accessToken);

    } else {
      // The person is not logged into your app or we are unable to tell.
      console.log('error');
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function (response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function () {
    FB.init({
      appId: '223715935095663',
      cookie: true, // enable cookies to allow the server to access 
      // the session
      xfbml: true, // parse social plugins on this page
      version: 'v2.8' // use graph api version 2.8
    });

    // Now that we've initialized the JavaScript SDK, we call 
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.

    FB.getLoginStatus(function (response) {
      statusChangeCallback(response);
    });

  };

  // Load the SDK asynchronously
  (function (d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s);
    js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function getAPI(authKey) {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function (response) {
      console.log(response)
      console.log('Successful login for: ' + response.name);
      var http = new XMLHttpRequest();
      var url = '/auth/fb';
      var params = {};

      function getAPI(authKey) {
        http.open('POST', url, true);

        //Send the proper header information along with the request
        http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

        http.onreadystatechange = function () { //Call a function when the state changes.
          if (http.readyState == 4 && http.status == 200) {
            alert(http.responseText);
          }
        }
        http.send(response);
      }
    });
  }
</script>